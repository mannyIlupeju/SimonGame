{"version":3,"sources":["game.js"],"names":["red","$","green","buttonColours","gamePattern","console","log","userClickedPattern","nextSequence","Math","floor","random","length","randomChosenColour","push","userChosenColour","Audio","fadeIn","button","on","this","attr","play","currentColour","addClass","setTimeout","removeClass","document","fadeOut","text"],"mappings":"aACA,IAAMA,IAAMC,EAAE,QADdC,MAAAD,EAAA,WACMD,KAAQC,EAAA,SACRC,OAASD,EAAA,WAMTE,cAAgB,CAAC,MAAO,QAAQ,OAAO,UAKvCC,YAAN,GACAC,QAAQC,IAAIF,aAKZC,IAAAA,mBAAYE,GASX,SAAAC,eAED,OAJuBL,cAAcM,KAAKC,MAAMD,KAAKE,SAASR,cAAcS,SAH5EP,QAAAC,IAAAC,oBAcAH,IAAAA,mBAAiBS,aAGjBV,eAEAE,QAAAC,IAAAO,oBAWAT,YAAAU,KAAAD,oBAaE,IAAME,OAAAA,EAAAA,IAAgBF,oBACtBN,QAAAA,IAAAA,QA2BAC,EAAAA,QAAAA,GAAAA,QAAY,WAEZD,mBAAgBS,KADIC,QAtBtBC,OAAOC,GAAG,QAAS,WACL,IAAIH,MAAM,UAAYf,EAAEmB,MAAMC,KAAK,MAAQ,QACjDC,SAMRrB,EAAE,QAAQkB,GAAG,QAAS,SAAsBI,IAC1CA,EAAgBtB,EAAEmB,OACJI,SAAS,WAEvBC,WAAW,WACTF,EAAcG,YAAY,YACzB,OAKLzB,EAAE0B,UAAUR,GAAG,WAAY,WAEzBX,eACAU,OAAOU,QAAQ,KAAKX,OAAO,KAAKW,QAAQ,KAAKX,OAAO,KACxC,IAAID,MAAM,UAAYH,mBAAqB,QACjDS,OAGNrB,EAAE,MAAM4B,KAAK","file":"game.min.js","sourcesContent":["//Step 1 \nconst red = $(\".red\");\nconst green= $(\".grblue\");\nconst blue = $(\".blue\");\nconst yellow = $(\".yellow\")\n\n//ButtonColours holding array of colours \n//Step 1 array  \nconst buttonColours = [\"red\", \"green\",\"blue\",\"yellow\"]\n\n//gamePattern which will hold the new randomChosenColour generated \n//gamePattern stores the random colour generator. \n//Step 2 array \nconst gamePattern = [];\nconsole.log(gamePattern);\n\n//-------------------------------------------------------------\n//Step 4 array\nconst userClickedPattern = [];\nconsole.log(userClickedPattern);\n\n\n//-------------------------------------------------------------\n//Step 2 - Create a new pattern (1 and 2)\n//nextSequence function generates random numbers from the array\nfunction nextSequence() {\n  const randomNumber = buttonColours[Math.floor(Math.random()*buttonColours.length)]\n  return randomNumber;\n}\n\nconst randomChosenColour = nextSequence(buttonColours);\nconsole.log(randomChosenColour);\n\n\n\n\n//Add the values of randomChosenColour to the gamePattern array. \ngamePattern.push(randomChosenColour);\n\n\n//-------------------------------------------------------------\n\n//Step 3 - Show Sequence to the user with Animations and Sounds. \nconst button = $(\"#\" + randomChosenColour);\nconsole.log(button);\n\n\n//Step 3.2 - Animate flash to the button and give it sound when it plays\n\n\n// button.fadeOut(100).fadeIn(100).fadeOut(100).fadeIn(100);\n\n// var audio = new Audio(\"sounds/\" + randomChosenColour + \".mp3\");\n// audio.play();\n\n\n\n\n\n\n\n\n//-------------------------------------------------------------\n//Step 4\n//Check which button is pressed and push them into userClickedPattern array\n$(\".btn\").on(\"click\", function(){\n  const userChosenColour = this;\n  userClickedPattern.push(userChosenColour);\n})\n\n\n//Step 5\n//to play Audio when user clicks\nbutton.on(\"click\", function(){\n  var audio = new Audio(\"sounds/\" + $(this).attr(\"id\") + \".mp3\");\n  audio.play();\n\n});\n\n//Step 6 \n//Add Animations to user clicks\n$(\".btn\").on(\"click\", function animatePress(currentColour){\n  currentColour = $(this)\n  currentColour.addClass(\"pressed\");\n\n  setTimeout(function(){\n    currentColour.removeClass(\"pressed\");\n  }, 100);\n})\n\n//Step 7\n//Start the game\n$(document).on(\"keypress\", function(){\n  // console.log(\"key was pressed\")\n  nextSequence();\n  button.fadeOut(100).fadeIn(100).fadeOut(100).fadeIn(100);\n  var audio = new Audio(\"sounds/\" + randomChosenColour + \".mp3\");\n  audio.play();\n\n  let level = 0;\n  $(\"h1\").text(\"Level 0\")\n  \n\n});\n\n\n\n\n\n\n\n\n\n\n\n\n"]}